{"version":3,"sources":["skeletons/Shimmer.jsx","skeletons/SkeletonElement.jsx","skeletons/SkeletonArticle.jsx","components/Articles.jsx","skeletons/SkeletonProfile.jsx","components/User.jsx","App.js","reportWebVitals.js","index.js"],"names":["Shimmer","className","SkeletonElement","type","classes","SkeletonArticle","theme","themeClass","Articles","useState","articles","setArticles","useEffect","setTimeout","a","fetch","res","json","data","console","log","map","article","title","body","id","num","SkeletonProfile","User","profile","setProfile","username","email","href","website","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gQAQeA,EARC,WACd,OACE,qBAAKC,UAAU,kBAAf,SACE,qBAAKA,UAAU,eCKNC,G,MANS,SAAC,GAAmB,IAAD,IAAhBC,KACnBC,EAAO,wBAD4B,MAAT,GAAS,GAGzC,OAAO,qBAAKH,UAAWG,MCcVC,EAhBS,SAAC,GAAyB,IAAD,IAAtBC,MACnBC,OADyC,MAAd,QAAc,EAG/C,OACE,sBAAKN,UAAS,2BAAsBM,GAApC,UACE,sBAAKN,UAAU,mBAAf,UACE,cAAC,EAAD,CAAiBE,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,YAExB,cAAC,EAAD,QCoBSK,EA/BE,WAAO,IAAD,EACWC,mBAAS,MADpB,mBACdC,EADc,KACJC,EADI,KAgBrB,OAJAC,qBAAU,WARRC,WAAU,sBAAC,8BAAAC,EAAA,sEACSC,MAAM,8CADf,cACHC,EADG,gBAEUA,EAAIC,OAFd,OAEHC,EAFG,OAGTC,QAAQC,IAAIF,GACZP,EAAYO,GAJH,2CAKR,OAKF,IAGD,sBAAKjB,UAAU,WAAf,UACE,4CACCS,GACCA,EAASW,KAAI,SAAAC,GAAO,OAClB,sBAAKrB,UAAU,UAAf,UACE,6BAAKqB,EAAQC,QACb,4BAAID,EAAQE,SAFgBF,EAAQG,QAKxCf,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGW,KAAI,SAAAK,GAAG,OAAI,cAAC,EAAD,CAA2BpB,MAAM,QAAXoB,U,OCNtDC,EApBS,SAAC,GAAyB,IAAD,IAAtBrB,MACnBC,OADyC,MAAd,QAAc,EAG/C,OACE,qBAAKN,UAAS,2BAAsBM,GAApC,SACE,sBAAKN,UAAU,mBAAf,UACE,8BACE,cAAC,EAAD,CAAiBE,KAAK,aAExB,gCACE,cAAC,EAAD,CAAiBA,KAAK,UACtB,cAAC,EAAD,CAAiBA,KAAK,SACtB,cAAC,EAAD,CAAiBA,KAAK,YAExB,cAAC,EAAD,UCgBOyB,EA9BF,WAAO,IAAD,EACanB,mBAAS,MADtB,mBACVoB,EADU,KACDC,EADC,KAejB,OAHAlB,qBAAU,WARRC,WAAU,sBAAC,8BAAAC,EAAA,sEACSC,MAAM,gDADf,cACHC,EADG,gBAEUA,EAAIC,OAFd,OAEHC,EAFG,OAGTC,QAAQC,IAAIF,GACZY,EAAW,eAAKZ,IAJP,2CAKR,OAKF,IAED,sBAAKjB,UAAU,OAAf,UACE,gDACC4B,GACC,sBAAK5B,UAAU,UAAf,UACE,mCAAM4B,EAAQE,YACd,4BAAIF,EAAQG,QACZ,mBAAGC,KAAMJ,EAAQK,QAAjB,SAA2BL,EAAQK,cAGrCL,GAAW,cAAC,EAAD,CAAiBvB,MAAM,cCX3B6B,MAdf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,iCACE,mDAEF,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCCOmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.46e1074b.chunk.js","sourcesContent":["const Shimmer = () => {\n  return (\n    <div className=\"shimmer-wrapper\">\n      <div className=\"shimmer\"></div>\n    </div>\n  )\n}\n\nexport default Shimmer\n","import './skeleton.scss'\n\nconst SkeletonElement = ({ type = '' }) => {\n  const classes = `skeleton ${type}`\n\n  return <div className={classes}></div>\n}\n\nexport default SkeletonElement\n","import Shimmer from './Shimmer'\nimport SkeletonElement from './SkeletonElement'\n\nconst SkeletonArticle = ({ theme = 'light' }) => {\n  const themeClass = theme\n\n  return (\n    <div className={`skeleton-wrapper ${themeClass}`}>\n      <div className=\"skeleton-article\">\n        <SkeletonElement type=\"title\" />\n        <SkeletonElement type=\"text\" />\n        <SkeletonElement type=\"text\" />\n        <SkeletonElement type=\"text\" />\n      </div>\n      <Shimmer />\n    </div>\n  )\n}\n\nexport default SkeletonArticle\n","import { useState, useEffect } from 'react'\nimport SkeletonArticle from '../skeletons/SkeletonArticle'\n\nconst Articles = () => {\n  const [articles, setArticles] = useState(null)\n\n  const delayRequestForSkeleton = () => {\n    setTimeout(async () => {\n      const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n      const data = await res.json()\n      console.log(data)\n      setArticles(data)\n    }, 5000)\n  }\n\n  useEffect(() => {\n    delayRequestForSkeleton()\n  }, [])\n\n  return (\n    <div className=\"articles\">\n      <h2> Articles </h2>\n      {articles &&\n        articles.map(article => (\n          <div className=\"article\" key={article.id}>\n            <h3>{article.title}</h3>\n            <p>{article.body}</p>\n          </div>\n        ))}\n      {!articles && [1, 2, 3, 4, 5].map(num => <SkeletonArticle key={num} theme=\"dark\" />)}\n    </div>\n  )\n}\n\nexport default Articles\n","import Shimmer from './Shimmer'\nimport SkeletonElement from './SkeletonElement'\n\nconst SkeletonProfile = ({ theme = 'light' }) => {\n  const themeClass = theme\n\n  return (\n    <div className={`skeleton-wrapper ${themeClass}`}>\n      <div className=\"skeleton-profile\">\n        <div>\n          <SkeletonElement type=\"avatar\" />\n        </div>\n        <div>\n          <SkeletonElement type=\"title\" />\n          <SkeletonElement type=\"text\" />\n          <SkeletonElement type=\"text\" />\n        </div>\n        <Shimmer />\n      </div>\n    </div>\n  )\n}\n\nexport default SkeletonProfile\n","import { useState, useEffect } from 'react'\nimport SkeletonProfile from '../skeletons/SkeletonProfile'\n\nconst User = () => {\n  const [profile, setProfile] = useState(null)\n\n  const delayRequestForSkeleton = () => {\n    setTimeout(async () => {\n      const res = await fetch('https://jsonplaceholder.typicode.com/users/1')\n      const data = await res.json()\n      console.log(data)\n      setProfile({ ...data })\n    }, 5000)\n  }\n\n  useEffect(() => {\n    delayRequestForSkeleton()\n  }, [])\n  return (\n    <div className=\"user\">\n      <h2> User Details </h2>\n      {profile && (\n        <div className=\"profile\">\n          <h3> {profile.username}</h3>\n          <p>{profile.email}</p>\n          <a href={profile.website}>{profile.website}</a>\n        </div>\n      )}\n      {!profile && <SkeletonProfile theme=\"light\" />}\n    </div>\n  )\n}\n\nexport default User\n","import Articles from './components/Articles'\nimport User from './components/User'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>React skeletons</h1>\n      </header>\n      <div className=\"content\">\n        <Articles />\n        <User />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}